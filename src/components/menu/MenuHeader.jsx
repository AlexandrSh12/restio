// src/components/menu/MenuHeader.jsx
import { useState } from 'react';
import { useNavigate } from 'react-router-dom';

export default function MenuHeader({ activeTab, onTabChange, bannersVisible = true }) {
    const [isMenuOpen, setIsMenuOpen] = useState(false);
    const [isSearchOpen, setIsSearchOpen] = useState(false);
    const [searchQuery, setSearchQuery] = useState('');
    const navigate = useNavigate();

    const handleSearch = (e) => {
        e.preventDefault();
        // TODO: Implement search functionality
        console.log('Searching for:', searchQuery);
    };

    const handleProfileClick = () => {
        // TODO: Open profile menu
        console.log('Profile clicked');
    };

    const handleBurgerMenu = () => {
        setIsMenuOpen(!isMenuOpen);
        // TODO: Implement burger menu
        console.log('Burger menu clicked');
    };

    return (
        <div className="menu-header">
            {/* –í–µ—Ä—Ö–Ω—è—è —Å—Ç—Ä–æ–∫–∞ —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏ */}
            <div className="header-top">
                <button
                    className="burger-btn"
                    onClick={handleBurgerMenu}
                    aria-label="–ú–µ–Ω—é"
                >
                    <div className="burger-lines">
                        <span></span>
                        <span></span>
                        <span></span>
                    </div>
                </button>

                <div className="header-actions">
                    <button
                        className={`search-btn ${isSearchOpen ? 'active' : ''}`}
                        onClick={() => setIsSearchOpen(!isSearchOpen)}
                        aria-label="–ü–æ–∏—Å–∫"
                    >
                        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2">
                            <circle cx="11" cy="11" r="8"/>
                            <path d="m21 21-4.35-4.35"/>
                        </svg>
                    </button>

                    <button
                        className="profile-btn"
                        onClick={handleProfileClick}
                        aria-label="–ü—Ä–æ—Ñ–∏–ª—å"
                    >
                        <div className="profile-avatar">
                            <span>–ê</span> {/* –ü–µ—Ä–≤–∞—è –±—É–∫–≤–∞ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
                        </div>
                    </button>
                </div>
            </div>

            {/* –°—Ç—Ä–æ–∫–∞ –ø–æ–∏—Å–∫–∞ (–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏) */}
            {isSearchOpen && (
                <div className="search-row">
                    <form onSubmit={handleSearch} className="search-form">
                        <input
                            type="text"
                            placeholder="–ü–æ–∏—Å–∫ –±–ª—é–¥..."
                            value={searchQuery}
                            onChange={(e) => setSearchQuery(e.target.value)}
                            autoFocus
                        />
                        <button type="submit">–ù–∞–π—Ç–∏</button>
                    </form>
                </div>
            )}

            {/* –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –º–µ–∂–¥—É –°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑ / –ó–∞–∫–∞–∑—ã */}
            <div className="tab-switcher">
                <button
                    className={`tab-btn ${activeTab === 'create' ? 'active' : ''}`}
                    onClick={() => onTabChange('create')}
                >
                    –°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑
                </button>
                <button
                    className={`tab-btn ${activeTab === 'orders' ? 'active' : ''}`}
                    onClick={() => onTabChange('orders')}
                >
                    –ó–∞–∫–∞–∑—ã
                </button>
            </div>

            {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –±–∞–Ω–Ω–µ—Ä—ã –¥–ª—è –æ—Ñ–∏—Ü–∏–∞–Ω—Ç–∞ (–±—É–¥—É—Ç —Å–∫—Ä—ã–≤–∞—Ç—å—Å—è –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ) */}
            {bannersVisible && (
                <div className="waiter-banners">
                    <div className="banner-item">
                        <span>üí°</span>
                        <span>–ù–æ–≤—ã–µ –±–ª—é–¥–∞ –≤ –º–µ–Ω—é!</span>
                    </div>
                    <div className="banner-item">
                        <span>‚è∞</span>
                        <span>–í—Ä–µ–º—è –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–æ</span>
                    </div>
                </div>
            )}
        </div>
    );
}